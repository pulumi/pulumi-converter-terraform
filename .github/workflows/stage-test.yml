name: Test

on:
  workflow_call:
    inputs:
      live-test:
        description: |
          Whether to run tests against a live environment. When false, tests that require secrets
          should be skipped.
        default: false
        required: false
        type: boolean
      commit-ref:
        description: Commit ref to check out and run tests against.
        default: ''
        required: false
        type: string
    secrets:
      PULUMI_ACCESS_TOKEN:   { required: false }
      AWS_ACCESS_KEY_ID:     { required: false }
      AWS_SECRET_ACCESS_KEY: { required: false }
      AWS_CI_ROLE_ARN:       { required: false }
      ARM_CLIENT_ID:         { required: false }
      ARM_CLIENT_SECRET:     { required: false }
      ARM_SUBSCRIPTION_ID:   { required: false }
      ARM_TENANT_ID:         { required: false }


env:
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v2
        with:
          ref: ${{ inputs.commit-ref }}

      - name: Install Go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ matrix.go-version }}
          stable: ${{ matrix.go-stable }}

      - name: Set up gotestfmt
        uses: gotesttools/gotestfmt-action@v2
        with:
          # Optional: pass GITHUB_TOKEN to avoid rate limiting.
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Install pulumi
        uses: pulumi/actions@v4
        with:
          pulumi-version: ">=3.78.1"

      # Pre-install some needed plugins
      - name: Install pulumi plugins
        run: |
          pulumi plugin install resource aws
          pulumi plugin install resource azure
          pulumi plugin install resource gcp
          pulumi plugin install resource kubernetes
          pulumi plugin install resource random
          pulumi plugin install resource std

      - name: Build and install
        run: make install

      - name: Test
        run: make test

      # Run tests with nice formatting. Save the original log in /tmp/gotest.log
      - name: Test examples
        run: |
          set -euo pipefail
          cd tests && go test -json -v -timeout 2h -parallel 10 ./... 2>&1 | tee /tmp/gotest.log | gotestfmt

      # Upload the original go test log as an artifact for later review
      - name: Upload test log
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: test-log
          path: /tmp/gotest.log
          if-no-files-found: error
    strategy:
      fail-fast: false
      matrix:
        go-version: [1.22.x]
        go-stable: [true]
